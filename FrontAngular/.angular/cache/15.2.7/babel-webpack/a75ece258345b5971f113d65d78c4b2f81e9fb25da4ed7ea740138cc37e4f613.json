{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../services/token.service\";\nimport * as i2 from \"src/app/services/cliente/cliente.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction LoginComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"label\", 4);\n    i0.ɵɵtext(2, \"CPF\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_div_1_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.cpf = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 6);\n    i0.ɵɵtext(5, \"Entrar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.cpf);\n  }\n}\nfunction LoginComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r5.clientes.cpf);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r5.clientes.nome);\n  }\n}\nfunction LoginComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, LoginComponent_div_2_div_1_Template, 5, 2, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.mesa);\n  }\n}\nexport class LoginComponent {\n  constructor(tokenService, clienteService, router) {\n    this.tokenService = tokenService;\n    this.clienteService = clienteService;\n    this.router = router;\n    this.logado = false;\n  }\n  ngOnInit() {}\n  submitForm() {\n    this.GetCliente(this.cpf);\n    setTimeout(() => {\n      if (this.mesa.length > 0) {\n        alert('Parabuains, Asmuei');\n        this.logado = true;\n      } else {\n        alert('Não localizado');\n        this.logado = false;\n      }\n    }, 700);\n  }\n  //Fazer o unsubscribe :D\n  GetCliente(cpf) {\n    this.tokenService.getToken().subscribe(tokenUser => {\n      this.token = tokenUser.token;\n      this.clienteService.getClienteByCPF(cpf, this.token).subscribe(mesa => {\n        this.mesa = mesa;\n        console.log(this.mesa);\n      });\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.TokenService), i0.ɵɵdirectiveInject(i2.ClienteService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 3,\n  vars: 2,\n  consts: [[3, \"ngSubmit\"], [\"id\", \"form\", 4, \"ngIf\"], [\"id\", \"logado\", 4, \"ngIf\"], [\"id\", \"form\"], [\"for\", \"cpf\"], [\"type\", \"text\", \"id\", \"cpf\", \"name\", \"cpf\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"id\", \"logado\"], [4, \"ngFor\", \"ngForOf\"], [\"for\", \"nome\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵtemplate(1, LoginComponent_div_1_Template, 6, 1, \"div\", 1);\n      i0.ɵɵtemplate(2, LoginComponent_div_2_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.logado);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.logado);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IACEA,8BAA+B;IACZA,mBAAG;IAAAA,iBAAQ;IAC5BA,gCAA2D;IAApBA;MAAAA;MAAA;MAAA;IAAA,EAAiB;IAAxDA,iBAA2D;IAC3DA,iCAAsB;IAAAA,sBAAM;IAAAA,iBAAS;;;;IADEA,eAAiB;IAAjBA,oCAAiB;;;;;IAIxDA,2BAA+B;IACZA,YAAqB;IAAAA,iBAAQ;IAC9CA,gCAAkB;IAAAA,YAAsB;IAAAA,iBAAQ;;;;IAD/BA,eAAqB;IAArBA,0CAAqB;IACpBA,eAAsB;IAAtBA,2CAAsB;;;;;IAH5CA,8BAAgC;IAC9BA,qEAGM;IACRA,iBAAM;;;;IAJkBA,eAAO;IAAPA,qCAAO;;;ACOjC,OAAM,MAAOC,cAAc;EAKzBC,YACUC,YAA0B,EAC1BC,cAA8B,EAC9BC,MAAc;IAFd,iBAAY,GAAZF,YAAY;IACZ,mBAAc,GAAdC,cAAc;IACd,WAAM,GAANC,MAAM;IAGhB,WAAM,GAAY,KAAK;EAFpB;EAGHC,QAAQ,IAER;EAEAC,UAAU;IACN,IAAI,CAACC,UAAU,CAAC,IAAI,CAACC,GAAG,CAAC;IAC3BC,UAAU,CAAC,MAAK;MACd,IAAI,IAAI,CAACC,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QACxBC,KAAK,CAAC,oBAAoB,CAAC;QAC3B,IAAI,CAACC,MAAM,GAAG,IAAI;OACnB,MAAM;QACLD,KAAK,CAAC,gBAAgB,CAAC;QACvB,IAAI,CAACC,MAAM,GAAG,KAAK;;IAEvB,CAAC,EAAE,GAAG,CAAC;EACT;EAEA;EACAN,UAAU,CAACC,GAAW;IACpB,IAAI,CAACN,YAAY,CAACY,QAAQ,EAAE,CAACC,SAAS,CAAEC,SAAS,IAAI;MACnD,IAAI,CAACC,KAAK,GAAGD,SAAS,CAACC,KAAK;MAC5B,IAAI,CAACd,cAAc,CAChBe,eAAe,CAACV,GAAG,EAAE,IAAI,CAACS,KAAK,CAAC,CAChCF,SAAS,CAAEL,IAAY,IAAI;QAC1B,IAAI,CAACA,IAAI,GAAGA,IAAI;QAChBS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,IAAI,CAAC;MACxB,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;;AAxCWV,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDd3B1B,+BAAgC;MAA1BA;QAAA,OAAY2B,gBAAY;MAAA,EAAC;MAC7B3B,+DAIM;MACNA,+DAKM;MACRA,iBAAO;;;MAXWA,eAAa;MAAbA,kCAAa;MAKXA,eAAY;MAAZA,iCAAY","names":["i0","LoginComponent","constructor","tokenService","clienteService","router","ngOnInit","submitForm","GetCliente","cpf","setTimeout","mesa","length","alert","logado","getToken","subscribe","tokenUser","token","getClienteByCPF","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\AceleraPL\\AceleraPlenoAngular\\src\\app\\component\\login\\login.component.html","E:\\AceleraPL\\AceleraPlenoAngular\\src\\app\\component\\login\\login.component.ts"],"sourcesContent":["<form (ngSubmit)=\"submitForm()\">\r\n  <div id=\"form\" *ngIf=\"!logado\">\r\n    <label for=\"cpf\">CPF</label>\r\n    <input type=\"text\" id=\"cpf\" name=\"cpf\" [(ngModel)]=\"cpf\" />\r\n    <button type=\"submit\">Entrar</button>\r\n  </div>\r\n  <div id=\"logado\" *ngIf=\"logado\">\r\n    <div *ngFor=\"let item of mesa\">\r\n      <label for=\"cpf\">{{item.clientes.cpf}}</label>\r\n      <label for=\"nome\">{{item.clientes.nome}}</label>\r\n    </div>\r\n  </div>\r\n</form>","import { Observable, lastValueFrom, firstValueFrom, Subscription } from 'rxjs';\r\nimport { Mesa } from './../../models/mesa';\r\nimport { TokenService } from './../../services/token.service';\r\nimport { ClienteService } from 'src/app/services/cliente/cliente.service';\r\nimport { Cliente } from './../../models/cliente';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Tokenretorno } from 'src/app/models/tokenretorno';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent {\r\n  token: string;\r\n  mesa: Mesa[];\r\n  public cpf: string;\r\n\r\n  constructor(\r\n    private tokenService: TokenService,\r\n    private clienteService: ClienteService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  logado: boolean = false;\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  submitForm() {\r\n      this.GetCliente(this.cpf);\r\n    setTimeout(() => {\r\n      if (this.mesa.length > 0) {\r\n        alert('Parabuains, Asmuei');\r\n        this.logado = true;\r\n      } else {\r\n        alert('Não localizado');\r\n        this.logado = false;\r\n      }\r\n    }, 700);\r\n  }\r\n\r\n  //Fazer o unsubscribe :D\r\n  GetCliente(cpf: string) {\r\n    this.tokenService.getToken().subscribe((tokenUser) => {\r\n      this.token = tokenUser.token;\r\n      this.clienteService\r\n        .getClienteByCPF(cpf, this.token)\r\n        .subscribe((mesa: Mesa[]) => {\r\n          this.mesa = mesa;\r\n          console.log(this.mesa);\r\n        });\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}