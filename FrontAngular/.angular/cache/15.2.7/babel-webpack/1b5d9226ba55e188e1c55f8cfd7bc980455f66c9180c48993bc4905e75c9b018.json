{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../services/token.service\";\nimport * as i2 from \"src/app/services/cliente/cliente.service\";\nimport * as i3 from \"./../../services/transporte/transporte-service.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction LoginComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"label\", 4);\n    i0.ɵɵtext(2, \"CPF\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_div_1_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.cpf = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 6);\n    i0.ɵɵtext(5, \"Entrar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.cpf);\n  }\n}\nfunction LoginComponent_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementStart(4, \"label\", 11);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r5.clientes.cpf);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r5.clientes.nome);\n  }\n}\nfunction LoginComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8);\n    i0.ɵɵtemplate(2, LoginComponent_div_2_div_2_Template, 6, 2, \"div\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.mesas);\n  }\n}\nexport class LoginComponent {\n  constructor(tokenService, clienteService, transporte, router) {\n    this.tokenService = tokenService;\n    this.clienteService = clienteService;\n    this.transporte = transporte;\n    this.router = router;\n    this.logado = false;\n  }\n  ngOnInit() {}\n  enviarObjeto() {\n    this.transporte.setObjeto(this.mesas);\n  }\n  submitForm() {\n    this.GetCliente(this.cpf);\n    setTimeout(() => {\n      if (this.mesas.length > 0) {\n        alert('Parabuains, Asmuei');\n        this.enviarObjeto();\n        this.logado = true;\n        this.router.navigate(['/menu']);\n      } else {\n        alert('Não localizado');\n        this.logado = false;\n      }\n    }, 500);\n  }\n  //Fazer o unsubscribe :D\n  GetCliente(cpf) {\n    this.tokenService.getToken().subscribe(tokenUser => {\n      this.token = tokenUser.token;\n      this.clienteService.getClienteByCPF(cpf, this.token).subscribe(mesa => {\n        this.mesas = mesa;\n        console.log(this.mesas);\n        this.clienteService.getClienteById(mesa[0].clienteId, this.token).subscribe(cliente => {\n          console.log(cliente);\n          Tokenretorno.cliente = cliente;\n        });\n      });\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.TokenService), i0.ɵɵdirectiveInject(i2.ClienteService), i0.ɵɵdirectiveInject(i3.TransporteServiceService), i0.ɵɵdirectiveInject(i4.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 3,\n  vars: 2,\n  consts: [[3, \"ngSubmit\"], [\"id\", \"notlogado\", 4, \"ngIf\"], [\"class\", \"col\", \"id\", \"logado\", 4, \"ngIf\"], [\"id\", \"notlogado\"], [\"for\", \"cpf\"], [\"type\", \"text\", \"id\", \"cpf\", \"name\", \"cpf\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"id\", \"logado\", 1, \"col\"], [1, \"col-sm-12\"], [4, \"ngFor\", \"ngForOf\"], [\"for\", \"cpf\", 2, \"color\", \"white\"], [\"for\", \"nome\", 2, \"color\", \"white\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵtemplate(1, LoginComponent_div_1_Template, 6, 1, \"div\", 1);\n      i0.ɵɵtemplate(2, LoginComponent_div_2_Template, 3, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.logado);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.logado);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.NgModel, i6.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;IACEA,8BAAoC;IACjBA,mBAAG;IAAAA,iBAAQ;IAC5BA,gCAA2D;IAApBA;MAAAA;MAAA;MAAA;IAAA,EAAiB;IAAxDA,iBAA2D;IAC3DA,iCAAsB;IAAAA,sBAAM;IAAAA,iBAAS;;;;IADEA,eAAiB;IAAjBA,oCAAiB;;;;;IAKtDA,2BAAgC;IACSA,YAAqB;IAAAA,iBAAQ;IACpEA,qBAAM;IACNA,iCAAwC;IAAAA,YAAsB;IAAAA,iBAAQ;;;;IAF/BA,eAAqB;IAArBA,0CAAqB;IAEpBA,eAAsB;IAAtBA,2CAAsB;;;;;IALpEA,8BAA4C;IAExCA,qEAIM;IACRA,iBAAM;;;;IALkBA,eAAQ;IAARA,sCAAQ;;;ACOpC,OAAM,MAAOC,cAAc;EAOzBC,YACUC,YAA0B,EAC1BC,cAA8B,EAC9BC,UAAoC,EACpCC,MAAc;IAHd,iBAAY,GAAZH,YAAY;IACZ,mBAAc,GAAdC,cAAc;IACd,eAAU,GAAVC,UAAU;IACV,WAAM,GAANC,MAAM;IAPhB,WAAM,GAAY,KAAK;EAQpB;EAEHC,QAAQ,IAER;EAEAC,YAAY;IACV,IAAI,CAACH,UAAU,CAACI,SAAS,CAAC,IAAI,CAACC,KAAK,CAAC;EACvC;EAEAC,UAAU;IACR,IAAI,CAACC,UAAU,CAAC,IAAI,CAACC,GAAG,CAAC;IACzBC,UAAU,CAAC,MAAK;MACd,IAAI,IAAI,CAACJ,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;QACzBC,KAAK,CAAC,oBAAoB,CAAC;QAC3B,IAAI,CAACR,YAAY,EAAE;QACnB,IAAI,CAACS,MAAM,GAAG,IAAI;QAClB,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;OAChC,MAAM;QACLF,KAAK,CAAC,gBAAgB,CAAC;QACvB,IAAI,CAACC,MAAM,GAAG,KAAK;;IAEvB,CAAC,EAAE,GAAG,CAAC;EACT;EAEA;EACDL,UAAU,CAACC,GAAW;IACnB,IAAI,CAACV,YAAY,CAACgB,QAAQ,EAAE,CAACC,SAAS,CAAEC,SAAS,IAAI;MACnD,IAAI,CAACC,KAAK,GAAGD,SAAS,CAACC,KAAK;MAC5B,IAAI,CAAClB,cAAc,CAChBmB,eAAe,CAACV,GAAG,EAAE,IAAI,CAACS,KAAK,CAAC,CAChCF,SAAS,CAAEI,IAAY,IAAI;QAC1B,IAAI,CAACd,KAAK,GAAGc,IAAI;QACjBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,KAAK,CAAC;QACvB,IAAI,CAACN,cAAc,CAChBuB,cAAc,CAACH,IAAI,CAAC,CAAC,CAAC,CAACI,SAAS,EAAE,IAAI,CAACN,KAAK,CAAC,CAC7CF,SAAS,CAAES,OAAgB,IAAI;UAC9BJ,OAAO,CAACC,GAAG,CAACG,OAAO,CAAC;UACpBC,YAAY,CAACD,OAAO,GAAGA,OAAO;QAChC,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;;AAtDW5B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA8B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDf3BnC,+BAAgC;MAA1BA;QAAA,OAAYoC,gBAAY;MAAA,EAAC;MAC7BpC,+DAIM;MACNA,+DAQM;MACRA,iBAAO;;;MAdgBA,eAAa;MAAbA,kCAAa;MAKJA,eAAY;MAAZA,iCAAY","names":["i0","LoginComponent","constructor","tokenService","clienteService","transporte","router","ngOnInit","enviarObjeto","setObjeto","mesas","submitForm","GetCliente","cpf","setTimeout","length","alert","logado","navigate","getToken","subscribe","tokenUser","token","getClienteByCPF","mesa","console","log","getClienteById","clienteId","cliente","Tokenretorno","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\AceleraPL\\AceleraPlenoAngular\\src\\app\\component\\login\\login.component.html","E:\\AceleraPL\\AceleraPlenoAngular\\src\\app\\component\\login\\login.component.ts"],"sourcesContent":["<form (ngSubmit)=\"submitForm()\">\r\n  <div id=\"notlogado\" *ngIf=\"!logado\">\r\n    <label for=\"cpf\">CPF</label>\r\n    <input type=\"text\" id=\"cpf\" name=\"cpf\" [(ngModel)]=\"cpf\" />\r\n    <button type=\"submit\">Entrar</button>\r\n  </div>\r\n  <div class=\"col\" id=\"logado\" *ngIf=\"logado\">\r\n    <div class=\"col-sm-12\">\r\n      <div *ngFor=\"let item of mesas\">\r\n        <label style=\"color: white;\" for=\"cpf\">{{item.clientes.cpf}}</label>\r\n        <br />\r\n        <label style=\"color: white;\" for=\"nome\">{{item.clientes.nome}}</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>","import { TransporteServiceService } from './../../services/transporte/transporte-service.service';\r\nimport { Mesa } from 'src/app/models/mesa';\r\nimport { Observable, lastValueFrom, firstValueFrom, Subscription } from 'rxjs';\r\nimport { TokenService } from './../../services/token.service';\r\nimport { ClienteService } from 'src/app/services/cliente/cliente.service';\r\nimport { Cliente } from './../../models/cliente';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Tokenretorno } from 'src/app/models/tokenretorno';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent {\r\n  token: string;\r\n  mesas: Mesa[];\r\n  public cpf: string;\r\n  logado: boolean = false;\r\n  cliente: Cliente;\r\n\r\n  constructor(\r\n    private tokenService: TokenService,\r\n    private clienteService: ClienteService,\r\n    private transporte: TransporteServiceService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  enviarObjeto() {\r\n    this.transporte.setObjeto(this.mesas);\r\n  }\r\n\r\n  submitForm() {\r\n    this.GetCliente(this.cpf);\r\n    setTimeout(() => {\r\n      if (this.mesas.length > 0) {\r\n        alert('Parabuains, Asmuei');\r\n        this.enviarObjeto();\r\n        this.logado = true;\r\n        this.router.navigate(['/menu']);\r\n      } else {\r\n        alert('Não localizado');\r\n        this.logado = false;\r\n      }\r\n    }, 500);\r\n  }\r\n\r\n  //Fazer o unsubscribe :D\r\n GetCliente(cpf: string) {\r\n    this.tokenService.getToken().subscribe((tokenUser) => {\r\n      this.token = tokenUser.token;\r\n      this.clienteService\r\n        .getClienteByCPF(cpf, this.token)\r\n        .subscribe((mesa: Mesa[]) => {\r\n          this.mesas = mesa;\r\n          console.log(this.mesas);\r\n          this.clienteService\r\n            .getClienteById(mesa[0].clienteId, this.token)\r\n            .subscribe((cliente: Cliente) => {\r\n              console.log(cliente);\r\n              Tokenretorno.cliente = cliente;\r\n            });\r\n        });\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}