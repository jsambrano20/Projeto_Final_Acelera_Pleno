{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/token.service\";\nimport * as i2 from \"src/app/services/prato/prato.service\";\nimport * as i3 from \"src/app/services/pedido/pedido.service\";\nimport * as i4 from \"src/app/services/transporte/transporte-service.service\";\nimport * as i5 from \"../login/login.component\";\nimport * as i6 from \"@angular/common\";\nfunction MenuComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8)(2, \"div\", 9);\n    i0.ɵɵelement(3, \"img\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 11)(5, \"h5\", 12);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 13);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 14)(10, \"h4\", 15);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function MenuComponent_div_10_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.RealizarPedido());\n    });\n    i0.ɵɵtext(13, \"Comprar\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"data:image/jpeg;base64,\", item_r1.foto, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r1.titulo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.descricao);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"R$ \", item_r1.valor, \"\");\n  }\n}\nexport class MenuComponent {\n  constructor(tokenService, pratoService, pedidoService, transporteService, loginComponent // injetando o LoginComponent aqui\n  ) {\n    this.tokenService = tokenService;\n    this.pratoService = pratoService;\n    this.pedidoService = pedidoService;\n    this.transporteService = transporteService;\n    this.loginComponent = loginComponent;\n    this.realizarPedido = {\n      mesaid: this.idMesa,\n      pratoid: 'C41B0305-14F3-4E49-90A4-08DB3C65CB9C',\n      cpf: this.cpf,\n      quantidade: 4\n    };\n  }\n  ngOnInit() {\n    this.cpf = this.loginComponent.mesas[0].cpf; // acessando o cliente armazenado no LoginComponent\n    this.idMesa = this.loginComponent.mesas[0].id;\n    this.GetPratos();\n  }\n  RealizarPedido() {\n    this.realizarPedido.mesaid = this.idMesa;\n    this.realizarPedido.cpf = this.cpf;\n    this.postPedido(this.realizarPedido);\n  }\n  postPedido(pedido) {\n    this.tokenService.getToken().subscribe(tokenUser => {\n      this.pedidoService.postPedido(pedido, tokenUser.token).subscribe(pedidos => {\n        this.pedido = pedidos;\n        console.log(this.pedido);\n      });\n    });\n  }\n  GetPedidosCPfMesa() {\n    this.tokenService.getToken().subscribe(tokenUser => {\n      this.pedidoService.getPedidosByMesaCPF(this.cpf, this.idMesa, tokenUser.token).subscribe(pedidos => {\n        this.pedidos = pedidos;\n        console.log(this.pedidos);\n      });\n    });\n  }\n  GetPratos() {\n    this.tokenService.getToken().subscribe(tokenUser => {\n      this.pratoService.getPratos(tokenUser.token).subscribe(pratos => {\n        this.pratos = pratos.filter(prato => prato.status);\n        console.log(this.pratos);\n      });\n    });\n  }\n}\nMenuComponent.ɵfac = function MenuComponent_Factory(t) {\n  return new (t || MenuComponent)(i0.ɵɵdirectiveInject(i1.TokenService), i0.ɵɵdirectiveInject(i2.PratoService), i0.ɵɵdirectiveInject(i3.PedidoService), i0.ɵɵdirectiveInject(i4.TransporteServiceService), i0.ɵɵdirectiveInject(i5.LoginComponent));\n};\nMenuComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MenuComponent,\n  selectors: [[\"app-menu\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[\"id\", \"blog\", 1, \"blog\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"titlepage\"], [1, \"row\", \"row-cols-1\", \"row-cols-md-2\", \"g-4\"], [\"class\", \"col-xl-4 col-lg-4 col-md-6 col-sm-12 mb-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-xl-4\", \"col-lg-4\", \"col-md-6\", \"col-sm-12\", \"mb-4\"], [1, \"card\", \"h-100\", 2, \"width\", \"18rem\"], [1, \"position-relative\"], [1, \"card-img-top\", \"mx-auto\", \"d-block\", \"h-100\", \"w-auto\", \"img-fluid\", 3, \"src\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"text-primary\", \"fw-bold\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function MenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\");\n      i0.ɵɵtext(6, \"Our Blog\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"span\");\n      i0.ɵɵtext(8, \"Lorem Ipsum is that it has a more-or-less normal distribution of letters,\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(9, \"div\", 5);\n      i0.ɵɵtemplate(10, MenuComponent_div_10_Template, 14, 4, \"div\", 6);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.pratos);\n    }\n  },\n  dependencies: [i6.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;IAwBMA,8BAAmF;IAG7EA,0BAC8D;IAChEA,iBAAM;IACNA,+BAAuB;IACEA,YAAiB;IAAAA,iBAAK;IAC7CA,6BAAqB;IAAAA,YAAoB;IAAAA,iBAAI;IAC7CA,+BAA+D;IAC5BA,aAAmB;IAAAA,iBAAK;IACzDA,mCAAyE;IAA3BA;MAAAA;MAAA;MAAA,OAASA,sCAAgB;IAAA,EAAC;IAACA,wBAAO;IAAAA,iBAAS;;;;IARtFA,eAA4C;IAA5CA,+FAA4C;IAI1BA,eAAiB;IAAjBA,oCAAiB;IACnBA,eAAoB;IAApBA,uCAAoB;IAENA,eAAmB;IAAnBA,+CAAmB;;;AClBlE,OAAM,MAAOC,aAAa;EAexBC,YACUC,YAA0B,EAC1BC,YAA0B,EAC1BC,aAA4B,EAC5BC,iBAA2C,EAC3CC,cAA8B,CAAC;EAAA;IAJ/B,iBAAY,GAAZJ,YAAY;IACZ,iBAAY,GAAZC,YAAY;IACZ,kBAAa,GAAbC,aAAa;IACb,sBAAiB,GAAjBC,iBAAiB;IACjB,mBAAc,GAAdC,cAAc;IAZxB,mBAAc,GAAmB;MAC/BC,MAAM,EAAE,IAAI,CAACC,MAAM;MACnBC,OAAO,EAAE,sCAAsC;MAC/CC,GAAG,EAAE,IAAI,CAACA,GAAG;MACbC,UAAU,EAAE;KACb;EAQE;EAEHC,QAAQ;IACN,IAAI,CAACF,GAAG,GAAG,IAAI,CAACJ,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,CAACH,GAAG,CAAC,CAAC;IAC7C,IAAI,CAACF,MAAM,GAAG,IAAI,CAACF,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC,CAACC,EAAE;IAC7C,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAC,cAAc;IACZ,IAAI,CAACC,cAAc,CAACV,MAAM,GAAG,IAAI,CAACC,MAAM;IACxC,IAAI,CAACS,cAAc,CAACP,GAAG,GAAG,IAAI,CAACA,GAAG;IAClC,IAAI,CAACQ,UAAU,CAAC,IAAI,CAACD,cAAc,CAAC;EACtC;EAEAC,UAAU,CAACC,MAAsB;IAC/B,IAAI,CAACjB,YAAY,CAACkB,QAAQ,EAAE,CAACC,SAAS,CAAEC,SAAS,IAAI;MACnD,IAAI,CAAClB,aAAa,CACfc,UAAU,CAACC,MAAM,EAAEG,SAAS,CAACC,KAAK,CAAC,CACnCF,SAAS,CAAEG,OAAgB,IAAI;QAC9B,IAAI,CAACL,MAAM,GAAGK,OAAO;QACrBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,MAAM,CAAC;MAC1B,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EAEAQ,iBAAiB;IACf,IAAI,CAACzB,YAAY,CAACkB,QAAQ,EAAE,CAACC,SAAS,CAAEC,SAAS,IAAI;MACnD,IAAI,CAAClB,aAAa,CACfwB,mBAAmB,CAAC,IAAI,CAAClB,GAAG,EAAE,IAAI,CAACF,MAAM,EAAEc,SAAS,CAACC,KAAK,CAAC,CAC3DF,SAAS,CAAEG,OAAkB,IAAI;QAChC,IAAI,CAACA,OAAO,GAAGA,OAAO;QACtBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,OAAO,CAAC;MAC3B,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EAEAT,SAAS;IACP,IAAI,CAACb,YAAY,CAACkB,QAAQ,EAAE,CAACC,SAAS,CAAEC,SAAS,IAAI;MACnD,IAAI,CAACnB,YAAY,CAAC0B,SAAS,CAACP,SAAS,CAACC,KAAK,CAAC,CAACF,SAAS,CAAES,MAAe,IAAI;QACzE,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,MAAM,CAAC;QAClDR,OAAO,CAACC,GAAG,CAAC,IAAI,CAACI,MAAM,CAAC;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;AAhEW9B,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAkC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDH1BvC,8BAA4B;MAKdA,wBAAQ;MAAAA,iBAAK;MACjBA,4BAAM;MAAAA,yFAAyE;MAAAA,iBAAO;MAI5FA,8BAA8C;MAC5CA,iEAeM;MACRA,iBAAM;;;MAhBoEA,gBAAS;MAATA,oCAAS","names":["i0","MenuComponent","constructor","tokenService","pratoService","pedidoService","transporteService","loginComponent","mesaid","idMesa","pratoid","cpf","quantidade","ngOnInit","mesas","id","GetPratos","RealizarPedido","realizarPedido","postPedido","pedido","getToken","subscribe","tokenUser","token","pedidos","console","log","GetPedidosCPfMesa","getPedidosByMesaCPF","getPratos","pratos","filter","prato","status","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\AceleraPL\\AceleraPlenoAngular\\src\\app\\component\\menu\\menu.component.html","E:\\AceleraPL\\AceleraPlenoAngular\\src\\app\\component\\menu\\menu.component.ts"],"sourcesContent":["<!-- <section>\r\n  <div *ngFor=\"let item of pratos\">\r\n    <div *ngIf=\"item.status\">\r\n      <div>\r\n        <img src=\"data:image/jpeg;base64,{{ item.foto }}\" />\r\n      </div>\r\n      <label>{{ item.titulo }}</label>\r\n      <label>{{ item.descricao }} </label>\r\n      <label>R$: {{ item.valor }}</label>\r\n      <button>Pedir</button>\r\n    </div>\r\n  </div>\r\n</section> -->\r\n<div id=\"blog\" class=\"blog\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"titlepage\">\r\n          <h2>Our Blog</h2>\r\n          <span>Lorem Ipsum is that it has a more-or-less normal distribution of letters,</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row row-cols-1 row-cols-md-2 g-4\">\r\n      <div class=\"col-xl-4 col-lg-4 col-md-6 col-sm-12 mb-4\" *ngFor=\"let item of pratos\">\r\n        <div class=\"card h-100\" style=\"width: 18rem;\">\r\n          <div class=\"position-relative\">\r\n            <img src=\"data:image/jpeg;base64,{{ item.foto }}\"\r\n              class=\"card-img-top mx-auto d-block h-100 w-auto img-fluid\">\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">{{ item.titulo }}</h5>\r\n            <p class=\"card-text\">{{ item.descricao }}</p>\r\n            <div class=\"d-flex justify-content-between align-items-center\">\r\n              <h4 class=\"text-primary fw-bold\">R$ {{ item.valor }}</h4>\r\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"RealizarPedido()\">Comprar</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { RealizarPedido } from 'src/app/models/realizar-pedido';\r\nimport { Mesa } from 'src/app/models/mesa';\r\nimport { Prato } from 'src/app/models/prato';\r\nimport { Pedidos } from 'src/app/models/pedidos';\r\nimport { TokenService } from 'src/app/services/token.service';\r\nimport { PratoService } from 'src/app/services/prato/prato.service';\r\nimport { PedidoService } from 'src/app/services/pedido/pedido.service';\r\nimport { TransporteServiceService } from 'src/app/services/transporte/transporte-service.service';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css'],\r\n})\r\nexport class MenuComponent implements OnInit {\r\n  cpf: string;\r\n  idMesa: string;\r\n  pratos: Prato[];\r\n  pedidos: Pedidos[];\r\n  pedido: Pedidos;\r\n  mesas: Mesa[];\r\n\r\n  realizarPedido: RealizarPedido = {\r\n    mesaid: this.idMesa,\r\n    pratoid: 'C41B0305-14F3-4E49-90A4-08DB3C65CB9C',\r\n    cpf: this.cpf,\r\n    quantidade: 4,\r\n  };\r\n\r\n  constructor(\r\n    private tokenService: TokenService,\r\n    private pratoService: PratoService,\r\n    private pedidoService: PedidoService,\r\n    private transporteService: TransporteServiceService,\r\n    private loginComponent: LoginComponent // injetando o LoginComponent aqui\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cpf = this.loginComponent.mesas[0].cpf; // acessando o cliente armazenado no LoginComponent\r\n    this.idMesa = this.loginComponent.mesas[0].id;\r\n    this.GetPratos();\r\n  }\r\n\r\n  RealizarPedido() {\r\n    this.realizarPedido.mesaid = this.idMesa;\r\n    this.realizarPedido.cpf = this.cpf;\r\n    this.postPedido(this.realizarPedido);\r\n  }\r\n\r\n  postPedido(pedido: RealizarPedido) {\r\n    this.tokenService.getToken().subscribe((tokenUser) => {\r\n      this.pedidoService\r\n        .postPedido(pedido, tokenUser.token)\r\n        .subscribe((pedidos: Pedidos) => {\r\n          this.pedido = pedidos;\r\n          console.log(this.pedido);\r\n        });\r\n    });\r\n  }\r\n\r\n  GetPedidosCPfMesa() {\r\n    this.tokenService.getToken().subscribe((tokenUser) => {\r\n      this.pedidoService\r\n        .getPedidosByMesaCPF(this.cpf, this.idMesa, tokenUser.token)\r\n        .subscribe((pedidos: Pedidos[]) => {\r\n          this.pedidos = pedidos;\r\n          console.log(this.pedidos);\r\n        });\r\n    });\r\n  }\r\n\r\n  GetPratos() {\r\n    this.tokenService.getToken().subscribe((tokenUser) => {\r\n      this.pratoService.getPratos(tokenUser.token).subscribe((pratos: Prato[]) => {\r\n        this.pratos = pratos.filter(prato => prato.status);\r\n        console.log(this.pratos);\r\n      });\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}