{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, retry, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PratoService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'https://localhost:7198/api/Prato/';\n  }\n  getPratos(token) {\n    return this.httpClient.get(`${this.url}Listar`, {\n      headers: new HttpHeaders({\n        Authorization: 'Bearer ' + token,\n        'Content-Type': 'application/json'\n      })\n    }).pipe(retry(2), catchError(this.handleError));\n  }\n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Erro ocorreu no lado do client\n      errorMessage = error.error.message;\n    } else {\n      // Erro ocorreu no lado do servidor\n      errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\nPratoService.ɵfac = function PratoService_Factory(t) {\n  return new (t || PratoService)(i0.ɵɵinject(i1.HttpClient));\n};\nPratoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PratoService,\n  factory: PratoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAwCA,WAAW,QAAQ,sBAAsB;AAEjF,SAAqBC,UAAU,EAAEC,KAAK,EAAEC,UAAU,QAAQ,MAAM;;;AAMhE,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAE9B,QAAG,GAAG,mCAAmC;EAFK;EAI9CC,SAAS,CAACC,KAAY;IACpB,OAAO,IAAI,CAACF,UAAU,CACrBG,GAAG,CAAU,GAAG,IAAI,CAACC,GAAG,QAAQ,EAAE;MACjCC,OAAO,EAAE,IAAIX,WAAW,CAAC;QACvBY,aAAa,EAAE,SAAS,GAAGJ,KAAK;QAChC,cAAc,EAAE;OACjB;KACF,CAAC,CACDK,IAAI,CAACX,KAAK,CAAC,CAAC,CAAC,EAAED,UAAU,CAAC,IAAI,CAACa,WAAW,CAAC,CAAC;EAC/C;EAEAA,WAAW,CAACC,KAAwB;IAClC,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;MACrC;MACAD,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACG,OAAO;KACnC,MAAM;MACL;MACAF,YAAY,GACV,mBAAmBD,KAAK,CAACI,MAAM,IAAI,GAAG,cAAcJ,KAAK,CAACG,OAAO,EAAE;;IAEvEE,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;IACzB,OAAOb,UAAU,CAACa,YAAY,CAAC;EACjC;;AA7BWZ,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAkB,SAAZlB,YAAY;EAAAmB,YAFX;AAAM","names":["HttpHeaders","catchError","retry","throwError","PratoService","constructor","httpClient","getPratos","token","get","url","headers","Authorization","pipe","handleError","error","errorMessage","ErrorEvent","message","status","console","log","factory","providedIn"],"sourceRoot":"","sources":["E:\\AceleraPL\\AceleraPlenoAngular\\src\\app\\services\\prato\\prato.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, catchError, retry, throwError } from 'rxjs';\r\nimport { Prato } from 'src/app/models/prato';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PratoService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  url = 'https://localhost:7198/api/Prato/';\r\n\r\n  getPratos(token:string): Observable<Prato[]>{\r\n    return this.httpClient\r\n    .get<Prato[]>(`${this.url}Listar`, {\r\n      headers: new HttpHeaders({\r\n        Authorization: 'Bearer ' + token,\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    })\r\n    .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Erro ocorreu no lado do client\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Erro ocorreu no lado do servidor\r\n      errorMessage =\r\n        `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}