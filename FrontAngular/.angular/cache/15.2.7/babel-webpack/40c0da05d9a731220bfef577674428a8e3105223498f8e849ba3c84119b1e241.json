{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/loader.service\";\nexport class LoaderComponent {\n  constructor(loaderService) {\n    this.loaderService = loaderService;\n    this.loading = this.loaderService.isLoading;\n  }\n}\nLoaderComponent.ɵfac = function LoaderComponent_Factory(t) {\n  return new (t || LoaderComponent)(i0.ɵɵdirectiveInject(i1.LoaderService));\n};\nLoaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoaderComponent,\n  selectors: [[\"loader\"]],\n  decls: 2,\n  vars: 3,\n  consts: [[3, \"show\"]],\n  template: function LoaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"ngx-loading\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"show\", i0.ɵɵpipeBind1(1, 1, ctx.loading) || false);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,eAAe;EAE1BC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IAE1B,YAAO,GAAqB,IAAI,CAACA,aAAa,CAACC,SAAS;EAFb;;AAFvCH,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAI;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT5BC,iCAA+D;;;;MAAlDA,iEAAmC","names":["LoaderComponent","constructor","loaderService","isLoading","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["E:\\AceleraPL\\AceleraPlenoAngular\\src\\app\\loader\\loader.component.ts","E:\\AceleraPL\\AceleraPlenoAngular\\src\\app\\loader\\loader.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { LoaderService } from '../services/loader.service';\r\n\r\n@Component({\r\n  selector: 'loader',\r\n  templateUrl: './loader.component.html',\r\n  styleUrls: ['./loader.component.css']\r\n})\r\nexport class LoaderComponent {\r\n\r\n  constructor(private loaderService: LoaderService){}\r\n\r\n  public loading: Subject<boolean> = this.loaderService.isLoading;\r\n  \r\n}\r\n","<ngx-loading [show]=\"(loading | async) || false\"></ngx-loading>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}