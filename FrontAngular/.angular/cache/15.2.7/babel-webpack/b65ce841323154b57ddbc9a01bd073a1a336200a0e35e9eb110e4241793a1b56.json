{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, retry, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PedidoService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'https://localhost:7198/api/Pedido/';\n  }\n  getPedidosByMesaCPF(cpf, idMesa, token) {\n    return this.httpClient.get(`${this.url}FiltrarPorMesaCliente/${cpf}/${idMesa}`, {\n      headers: new HttpHeaders({\n        Authorization: 'Bearer ' + token,\n        'Content-Type': 'application/json'\n      })\n    }).pipe(retry(2), catchError(this.handleError));\n  }\n  postPedido(pedido, token) {\n    return this.httpClient.post(`${this.url}Incluir`, pedido, {\n      headers: new HttpHeaders({\n        Authorization: 'Bearer ' + token,\n        'Content-Type': 'application/json'\n      })\n    }).pipe(retry(2), catchError(this.handleError));\n  }\n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Erro ocorreu no lado do client\n      errorMessage = error.error.message;\n    } else {\n      // Erro ocorreu no lado do servidor\n      errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\nPedidoService.ɵfac = function PedidoService_Factory(t) {\n  return new (t || PedidoService)(i0.ɵɵinject(i1.HttpClient));\n};\nPedidoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PedidoService,\n  factory: PedidoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAwCA,WAAW,QAAQ,sBAAsB;AAEjF,SAAqBC,UAAU,EAAEC,KAAK,EAAEC,UAAU,QAAQ,MAAM;;;AAOhE,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAE9B,QAAG,GAAG,oCAAoC;EAFI;EAI9CC,mBAAmB,CAAEC,GAAU,EAACC,MAAa,EAAEC,KAAY;IACzD,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAY,GAAG,IAAI,CAACC,GAAG,yBAAyBJ,GAAG,IAAIC,MAAM,EAAE,EAAE;MACzFI,OAAO,EAAE,IAAIb,WAAW,CAAC;QACvBc,aAAa,EAAE,SAAS,GAAGJ,KAAK;QAChC,cAAc,EAAE;OACjB;KACF,CAAC,CACDK,IAAI,CAACb,KAAK,CAAC,CAAC,CAAC,EAAED,UAAU,CAAC,IAAI,CAACe,WAAW,CAAC,CAAC;EAC/C;EAEAC,UAAU,CAACC,MAAsB,EAAER,KAAa;IAC9C,OAAO,IAAI,CAACJ,UAAU,CAACa,IAAI,CAAU,GAAG,IAAI,CAACP,GAAG,SAAS,EAAEM,MAAM,EAAE;MACjEL,OAAO,EAAE,IAAIb,WAAW,CAAC;QACvBc,aAAa,EAAE,SAAS,GAAGJ,KAAK;QAChC,cAAc,EAAE;OACjB;KACF,CAAC,CAACK,IAAI,CAACb,KAAK,CAAC,CAAC,CAAC,EAAED,UAAU,CAAC,IAAI,CAACe,WAAW,CAAC,CAAC;EACjD;EAEAA,WAAW,CAACI,KAAwB;IAClC,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;MACrC;MACAD,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACG,OAAO;KACnC,MAAM;MACL;MACAF,YAAY,GACV,mBAAmBD,KAAK,CAACI,MAAM,IAAI,GAAG,cAAcJ,KAAK,CAACG,OAAO,EAAE;;IAEvEE,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;IACzB,OAAOlB,UAAU,CAACkB,YAAY,CAAC;EACjC;;AArCWjB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAuB,SAAbvB,aAAa;EAAAwB,YAFZ;AAAM","names":["HttpHeaders","catchError","retry","throwError","PedidoService","constructor","httpClient","getPedidosByMesaCPF","cpf","idMesa","token","get","url","headers","Authorization","pipe","handleError","postPedido","pedido","post","error","errorMessage","ErrorEvent","message","status","console","log","factory","providedIn"],"sourceRoot":"","sources":["E:\\AceleraPL\\AceleraPlenoAngular\\src\\app\\services\\pedido\\pedido.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, catchError, retry, throwError } from 'rxjs';\r\nimport { Pedidos } from 'src/app/models/pedidos';\r\nimport { RealizarPedido } from 'src/app/models/realizar-pedido';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PedidoService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  url = 'https://localhost:7198/api/Pedido/';\r\n\r\n  getPedidosByMesaCPF( cpf:string,idMesa:string, token:string):Observable<Pedidos[]>{\r\n    return this.httpClient.get<Pedidos[]>(`${this.url}FiltrarPorMesaCliente/${cpf}/${idMesa}`, {\r\n      headers: new HttpHeaders({\r\n        Authorization: 'Bearer ' + token,\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    })\r\n    .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  postPedido(pedido: RealizarPedido, token: string): Observable<Pedidos> {\r\n    return this.httpClient.post<Pedidos>(`${this.url}Incluir`, pedido, {\r\n      headers: new HttpHeaders({\r\n        Authorization: 'Bearer ' + token,\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    }).pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Erro ocorreu no lado do client\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Erro ocorreu no lado do servidor\r\n      errorMessage =\r\n        `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}